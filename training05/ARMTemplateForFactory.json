{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "training05"
		},
		"AzureDatabricks1_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks1'"
		},
		"Blob_Storage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Blob_Storage'"
		},
		"SqlServer1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServer1'"
		},
		"SqlServer2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServer2'"
		},
		"linkedService1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'linkedService1'"
		},
		"default_properties_Schema_Name_gbl_value": {
			"type": "string",
			"defaultValue": "dbo"
		},
		"default_properties_DataBase_Name_value": {
			"type": "string",
			"defaultValue": "Dev"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Copy_Data_DB_to_File_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"description": "iogylghvh u 8ofyg from DB write to file",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {
									"Schema_name": {
										"value": "@pipeline().parameters.Schema_Name",
										"type": "Expression"
									},
									"Table_Name": {
										"value": "@pipeline().parameters.Table_Name",
										"type": "Expression"
									},
									"Database__Name": {
										"value": "@pipeline().globalParameters.DataBase_Name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "csv_blob",
								"type": "DatasetReference",
								"parameters": {
									"Container_name": "output",
									"file_name": "Employee"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Schema_Name": {
						"type": "string"
					},
					"Table_Name": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Day3"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
				"[concat(variables('factoryId'), '/datasets/csv_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy_Data_DB_to_Files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {
									"Schema_name": {
										"value": "@pipeline().globalParameters.Schema_Name_gbl",
										"type": "Expression"
									},
									"Table_Name": {
										"value": "@pipeline().parameters.Table_Name",
										"type": "Expression"
									},
									"Database__Name": {
										"value": "@pipeline().globalParameters.DataBase_Name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "csv_blob",
								"type": "DatasetReference",
								"parameters": {
									"Container_name": "output",
									"file_name": {
										"value": "@pipeline().parameters.OutPut_File_Name",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Schema_Name": {
						"type": "string"
					},
					"Table_Name": {
						"type": "string"
					},
					"OutPut_File_Name": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Day3"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
				"[concat(variables('factoryId'), '/datasets/csv_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy_Data_DB_to_Files_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {
									"Schema_name": {
										"value": "@pipeline().globalParameters.Schema_Name_gbl",
										"type": "Expression"
									},
									"Table_Name": {
										"value": "@pipeline().parameters.Table_Name",
										"type": "Expression"
									},
									"Database__Name": {
										"value": "@pipeline().globalParameters.DataBase_Name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "csv_blob",
								"type": "DatasetReference",
								"parameters": {
									"Container_name": "output",
									"file_name": {
										"value": "@pipeline().parameters.OutPut_File_Name",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Schema_Name": {
						"type": "string"
					},
					"Table_Name": {
						"type": "string"
					},
					"OutPut_File_Name": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Day4"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
				"[concat(variables('factoryId'), '/datasets/csv_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy_Data_file_to_file')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1_copy1",
						"description": "Read from file write to file",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "csv_blob",
								"type": "DatasetReference",
								"parameters": {
									"Container_name": "input",
									"file_name": "employees.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "parquet_file",
								"type": "DatasetReference",
								"parameters": {
									"path": {
										"value": "@pipeline().parameters.output_parameter",
										"type": "Expression"
									},
									"output_file": {
										"value": "@pipeline().parameters.output_filename",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"input_parameter": {
						"type": "string"
					},
					"output_parameter": {
						"type": "string"
					},
					"input_file_name": {
						"type": "string"
					},
					"output_filename": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Day1"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/csv_blob')]",
				"[concat(variables('factoryId'), '/datasets/parquet_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy_data_DB_to_File')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"description": "Read from DB write to file",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {
									"Schema_name": {
										"value": "@pipeline().parameters.Schema_Name",
										"type": "Expression"
									},
									"Table_Name": {
										"value": "@pipeline().parameters.Table_Name",
										"type": "Expression"
									},
									"Database__Name": {
										"value": "@pipeline().globalParameters.DataBase_Name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "csv_blob",
								"type": "DatasetReference",
								"parameters": {
									"Container_name": "output",
									"file_name": "Employee"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Schema_Name": {
						"type": "string"
					},
					"Table_Name": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Day2"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
				"[concat(variables('factoryId'), '/datasets/csv_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Get_Meta_Data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "csv_blob",
								"type": "DatasetReference",
								"parameters": {
									"Container_name": {
										"value": "@pipeline().parameters.Container_Name",
										"type": "Expression"
									},
									"file_name": {
										"value": "@pipeline().parameters.File_Name",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"structure"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Container_Name": {
						"type": "String"
					},
					"File_Name": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Day1"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/csv_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Lookup_SQL_parameter')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT * FROM ',pipeline().parameters.Schema_Name,'.',pipeline().parameters.Table_Name)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {
									"Schema_name": {
										"value": "@pipeline().globalParameters.Schema_Name_gbl",
										"type": "Expression"
									},
									"Table_Name": {
										"value": "@pipeline().parameters.Table_Name",
										"type": "Expression"
									},
									"Database__Name": {
										"value": "@pipeline().globalParameters.DataBase_Name",
										"type": "Expression"
									}
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Schema_Name": {
						"type": "string"
					},
					"Table_Name": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Day5"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Lookup_SQL_GBL_parameter')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM @{pipeline().globalParameters.Schema_Name_gbl}.@{pipeline().parameters.Table_Name}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {
									"Schema_name": {
										"value": "@pipeline().globalParameters.Schema_Name_gbl",
										"type": "Expression"
									},
									"Table_Name": {
										"value": "@pipeline().parameters.Table_Name",
										"type": "Expression"
									},
									"Database__Name": {
										"value": "@pipeline().globalParameters.DataBase_Name",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Table_Name": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Day5"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pipeline Execution')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Copy_Data_file_to_file",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"input_parameter": {
									"value": "@pipeline().parameters.pip2_input",
									"type": "Expression"
								},
								"output_parameter": {
									"value": "@pipeline().parameters.pip2_output",
									"type": "Expression"
								},
								"input_file_name": {
									"value": "@pipeline().parameters.pip2_input_file",
									"type": "Expression"
								},
								"output_filename": {
									"value": "@pipeline().parameters.pip2_output_file",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"pip2_input": {
						"type": "string"
					},
					"pip2_output": {
						"type": "string"
					},
					"pip2_input_file": {
						"type": "string"
					},
					"pip2_output_file": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Day1"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Copy_Data_file_to_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Get Metadata2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "csv_blob",
								"type": "DatasetReference",
								"parameters": {
									"Container_name": "input",
									"file_name": "employees.csv"
								}
							},
							"fieldList": [
								"structure"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Get Metadata2",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {
									"Schema_name": {
										"value": "@pipeline().globalParameters.Schema_Name_gbl",
										"type": "Expression"
									},
									"Table_Name": {
										"value": "@pipeline().parameters.Table_Name",
										"type": "Expression"
									},
									"Database__Name": {
										"value": "@pipeline().globalParameters.DataBase_Name",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"structure"
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Container_Name": {
						"type": "String"
					},
					"Table_Name": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Day2"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/csv_blob')]",
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {
									"Schema_name": {
										"value": "@pipeline().globalParameters.Schema_Name_gbl",
										"type": "Expression"
									},
									"Table_Name": {
										"value": "@pipeline().parameters.Table_Name",
										"type": "Expression"
									},
									"Database__Name": {
										"value": "@pipeline().globalParameters.DataBase_Name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "csv_blob",
								"type": "DatasetReference",
								"parameters": {
									"Container_name": "output",
									"file_name": {
										"value": "@pipeline().parameters.OutPut_File_Name",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Table_Name": {
						"type": "string"
					},
					"OutPut_File_Name": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Day4"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
				"[concat(variables('factoryId'), '/datasets/csv_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy_parameter_SQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "@concat('select * from ', pipeline().globalParameters.Schema_Name_gbl, '.', pipeline().parameters.Table_Name)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {
									"Schema_name": {
										"value": "@pipeline().globalParameters.Schema_Name_gbl",
										"type": "Expression"
									},
									"Table_Name": {
										"value": "@pipeline().parameters.Table_Name",
										"type": "Expression"
									},
									"Database__Name": {
										"value": "@pipeline().globalParameters.DataBase_Name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "parquet_file",
								"type": "DatasetReference",
								"parameters": {
									"path": "output",
									"output_file": {
										"value": "@pipeline().parameters.Table_Name",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Table_Name": {
						"type": "string"
					}
				},
				"variables": {
					"dddd": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Day5"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
				"[concat(variables('factoryId'), '/datasets/parquet_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer1",
					"type": "LinkedServiceReference",
					"parameters": {
						"Database": {
							"value": "@dataset().Database__Name",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"Schema_name": {
						"type": "string"
					},
					"Table_Name": {
						"type": "string"
					},
					"Database__Name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().Schema_name",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().Table_Name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/csv_blob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Blob_Storage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container_name": {
						"type": "String"
					},
					"file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().Container_name",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Blob_Storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/parquet_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Blob_Storage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"path": {
						"type": "string"
					},
					"output_file": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().output_file",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().path",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Blob_Storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-5123136599992167.7.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks1_accessToken')]"
					},
					"newClusterNodeType": "Standard_DS3_v2",
					"newClusterNumOfWorker": "1",
					"newClusterSparkEnvVars": {
						"PYSPARK_PYTHON": "/databricks/python3/bin/python3"
					},
					"newClusterVersion": "14.2.x-cpu-ml-scala2.12",
					"clusterOption": "Fixed",
					"newClusterInitScripts": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blob_Storage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('Blob_Storage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"Database": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServer1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServer2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkedService1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AmazonRdsForSqlServer",
				"typeProperties": {
					"connectionString": "[parameters('linkedService1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "MS SQL Server",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/For_each_copy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT * FROM ',pipeline().globalParameters.Schema_Name_gbl,'.',pipeline().parameters.Table_Name)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {
									"Schema_name": {
										"value": "@pipeline().globalParameters.Schema_Name_gbl",
										"type": "Expression"
									},
									"Table_Name": {
										"value": "@pipeline().parameters.Table_Name",
										"type": "Expression"
									},
									"Database__Name": {
										"value": "@pipeline().globalParameters.DataBase_Name",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "TableName_Var",
										"value": {
											"value": "@item().Table_name",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set variable1_copy1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "status_VAr",
										"value": {
											"value": "@item().status",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Table_Name": {
						"type": "string"
					}
				},
				"variables": {
					"TableName_Var": {
						"type": "String"
					},
					"status_VAr": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Day6"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/For_each_set_var_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT * FROM ',pipeline().globalParameters.Schema_Name_gbl,'.',pipeline().parameters.Table_Name)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {
									"Schema_name": {
										"value": "@pipeline().globalParameters.Schema_Name_gbl",
										"type": "Expression"
									},
									"Table_Name": {
										"value": "@pipeline().parameters.Table_Name",
										"type": "Expression"
									},
									"Database__Name": {
										"value": "@pipeline().globalParameters.DataBase_Name",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Tabl_Name_Set_variable",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "TableName_Var",
										"value": {
											"value": "@item().Table_name",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup2",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Tabl_Name_Set_variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT * FROM ', pipeline().globalParameters.Schema_Name_gbl,'.',variables('TableName_Var') )",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "SqlServerTable1",
											"type": "DatasetReference",
											"parameters": {
												"Schema_name": {
													"value": "@pipeline().globalParameters.Schema_Name_gbl",
													"type": "Expression"
												},
												"Table_Name": {
													"value": "@pipeline().parameters.Table_Name",
													"type": "Expression"
												},
												"Database__Name": {
													"value": "@pipeline().globalParameters.DataBase_Name",
													"type": "Expression"
												}
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Table_Name": {
						"type": "string"
					}
				},
				"variables": {
					"TableName_Var": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Day6"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/globalparameters",
			"apiVersion": "2018-06-01",
			"properties": {
				"Schema_Name_gbl": {
					"type": "string",
					"value": "[parameters('default_properties_Schema_Name_gbl_value')]"
				},
				"DataBase_Name": {
					"type": "string",
					"value": "[parameters('default_properties_DataBase_Name_value')]"
				}
			},
			"dependsOn": []
		}
	]
}